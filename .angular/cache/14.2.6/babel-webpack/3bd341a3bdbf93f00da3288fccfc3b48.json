{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let CartService = /*#__PURE__*/(() => {\n  class CartService {\n    constructor() {\n      this.cart = {\n        items: [],\n        status: 'active'\n      };\n    }\n\n    getCart() {\n      return this.cart;\n    }\n\n    addToCart(productId, quantity) {\n      // console.log(`in cart service, add to cart\\nproduct id: ${productId}, quantity: ${quantity}`)\n      // check if item is already in cart:\n      const itemIndex = this.cart.items.findIndex(item => item.productId == productId);\n\n      if (itemIndex != -1) {\n        // update quantity if item is already in order\n        const prevQuantity = this.cart.items[itemIndex].quantity;\n        this.cart.items[itemIndex].quantity = prevQuantity + quantity;\n      } else {\n        // create new item in order\n        const newItem = {\n          // id: this.cart.items.length + 1,\n          quantity: quantity,\n          productId: productId\n        };\n        this.cart.items.push(newItem);\n      }\n\n      console.log(this.cart.items);\n    }\n\n    deleteItem(productId) {\n      this.cart.items = this.cart.items.filter(item => item.productId != productId);\n    }\n\n    updateQuantity(productId, quantity) {\n      const itemIndex = this.cart.items.findIndex(item => item.productId == productId);\n      this.cart.items[itemIndex].quantity = quantity;\n      console.log(this.cart);\n    }\n\n    emptyCart() {\n      this.cart.items = [];\n    }\n\n  }\n\n  CartService.ɵfac = function CartService_Factory(t) {\n    return new (t || CartService)();\n  };\n\n  CartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CartService,\n    factory: CartService.ɵfac,\n    providedIn: 'root'\n  });\n  return CartService;\n})();","map":null,"metadata":{},"sourceType":"module"}